name: Commit

on:
    push:
        branches: [main]
    pull_request:
        branches: [main]

env:
    NODE_VERSION: 14

jobs:
    lint-commit:
        name: Lint commit message
        runs-on: ubuntu-latest
        if: "!contains(github.event.head_commit.message, '[skip ci]')"
        steps:
            - name: Checkout
              uses: actions/checkout@v2
            - name: Setup Node.js ${{ env.NODE_VERSION }}
              uses: actions/setup-node@v2
              with:
                  node-version: ${{ env.NODE_VERSION }}
            - name: Get Yarn cache directory
              id: get-yarn-cache-dir
              run: echo "::set-output name=path::$(yarn cache dir)"
            - name: Cache Yarn dependencies
              uses: actions/cache@v2.1.6
              with:
                  path: ${{ steps.get-yarn-cache-dir.outputs.path }}
                  key: "${{ runner.os }}-node-${{ env.NODE_VERSION }}-yarn-\
                      ${{ hashFiles('**/yarn.lock') }}"
                  restore-keys: |
                      ${{ runner.os }}-node-${{ env.NODE_VERSION }}-yarn-
            - run: yarn install --frozen-lockfile
            - name: Validate all commits from PR
                run: npx commitlint --from ${{ github.event.pull_request.base.sha }} --to ${{ github.event.pull_request.head.sha }} --verbose

    lint-code:
        name: Lint code
        runs-on: ubuntu-latest
        if: "!contains(github.event.head_commit.messagegaa, '[skip ci]')"
        steps:
            - name: Checkout
              uses: actions/checkout@v2
            - name: Setup Node.js ${{ env.NODE_VERSION }}
              uses: actions/setup-node@v2
              with:
                  node-version: ${{ env.NODE_VERSION }}
            - name: Get Yarn cache directory
              id: get-yarn-cache-dir
              run: echo "::set-output name=path::$(yarn cache dir)"
            - name: Cache Yarn dependencies
              uses: actions/cache@v2.1.6
              with:
                  path: ${{ steps.get-yarn-cache-dir.outputs.path }}
                  key: "${{ runner.os }}-node-${{ env.NODE_VERSION }}-yarn-\
                      ${{ hashFiles('**/yarn.lock') }}"
                  restore-keys: |
                      ${{ runner.os }}-node-${{ env.NODE_VERSION }}-yarn-
            - run: yarn install --frozen-lockfile
            - run: yarn lint
